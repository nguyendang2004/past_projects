/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Lab13_Qifan_Group1_A2;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.PrintStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Comparator;

import Lab13_Qifan_Group1_A2.database.DatabaseUtils;
import Lab13_Qifan_Group1_A2.home.GuestHome;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import Lab13_Qifan_Group1_A2.database.Database;
import Lab13_Qifan_Group1_A2.database.ScrollTable;
import Lab13_Qifan_Group1_A2.database.UserTable;
import Lab13_Qifan_Group1_A2.hasher.Hasher;
import Lab13_Qifan_Group1_A2.home.AdminHome;
import Lab13_Qifan_Group1_A2.home.RegisteredHome;
import Lab13_Qifan_Group1_A2.parsing.Parser;
import Lab13_Qifan_Group1_A2.start.Start;
import Lab13_Qifan_Group1_A2.users.Admin;
import Lab13_Qifan_Group1_A2.users.Guest;
import Lab13_Qifan_Group1_A2.users.RegisteredUser;
import Lab13_Qifan_Group1_A2.users.User;

public class AppTest
{
	private App app;
	private final ByteArrayOutputStream testOut = new ByteArrayOutputStream();
	private static final String NEWLINE = System.lineSeparator();
	private ByteArrayInputStream testIn;
	private static final Date date = new java.sql.Date(System.currentTimeMillis());

	// Test user 1
	private final String userID1 = "Zero";
	private final String username1 = "Lulu";
	private final String firstName1 = "Lelouch";
	private final String lastName1 = "vi Britannia";
	private final String email1 = "LL@a11.com";
	private final String phoneNumber1 = "012345678";
	private final long uploadCount1 = 11;

	// Test user 2
	private final String userID2 = "C2";
	private final String username2 = "CC";
	private final String password2 = "<3";
	private final String firstName2 = "REDACTED";
	private final String lastName2 = "REDACTED";
	private final String email2 = "c@c.com";
	private final String phoneNumber2 = "01343243";
	private final long uploadCount2 = 0;

	@Before
	public void prepare()
	{
		System.setOut(new PrintStream(testOut));
		Database.dropTables();
		Database.createTables();
		Admin admin = new Admin("admin", "admin", "Joe", "Mama", "joe@mama.com", "0810202311", 0);
		UserTable.insertUser(admin, Hasher.createHash("admin"));
		Guest guest = new Guest("guest", "guest", "Saul", "Goodman", "better@call.com", "5058425662", 0);
		UserTable.insertUser(guest, Hasher.createHash("guest"));
		User user1 = new RegisteredUser("111", "qqq", "aaa", "aaa", "aaa", "0", 0);
		// User user2 = new RegisteredUser("222", "www", "aaa", "aaa", "aaa", "0", 0);
		// User user3 = new RegisteredUser("333", "eee", "aaa", "aaa", "aaa", "0", 0);
		UserTable.insertUser(user1, Hasher.createHash("xxx"));
		// UserTable.insertUser(user2, Hasher.createHash("xxx"));
		// UserTable.insertUser(user3, Hasher.createHash("xxx"));

		Path uploads = Paths.get("."+File.separator+"uploads");
        Path downloads = Paths.get("."+File.separator+"downloads");
		try {
			if (Files.exists(uploads)) {
				Files
				.walk(uploads)
				.sorted(Comparator.reverseOrder())
				.forEach(path -> {
					try {
						Files.delete(path);
					} catch (IOException e) {
						e.printStackTrace();
					}
				});
			}
            if (Files.exists(downloads)) {
				Files
				.walk(downloads)
				.sorted(Comparator.reverseOrder())
				.forEach(path -> {
					try {
						Files.delete(path);
					} catch (IOException e) {
						e.printStackTrace();
					}
				});
			}
        }
        catch (IOException e) {
            e.printStackTrace();
        }
		System.setOut(new PrintStream(testOut));
	}

	@After
	public void reset()
	{
		testOut.reset();
		Database.dropTables();
	}

	@Test
	public void testDbSetup()
	{
		Database.dropTables();
		App.dbSetup();
		assertTrue(UserTable.userExists("admin"));
		assertTrue(UserTable.userExists("guest"));
	}

	@Test
	public void testLoginGuest()
	{
		String loginpage = String.join(NEWLINE,
		"====================================================================",
        "-- Choose a Login Option --",
        "> Log in as Guest\t(guest)",
        "> Log in as User\t(login)",
        "> Register\t\t(register)",
        "> Exit\t\t\t(exit)",
		"====================================================================", NEWLINE);
		loginpage = loginpage + "Welcome to the Library of Agility, guest" + NEWLINE + NEWLINE;

		String line = "guest" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);

		app = new App();
		app.login();

		assertEquals(loginpage, testOut.toString());
	}

	@Test
	public void testLoginAdmin()
	{
		String loginpage = String.join(NEWLINE,
		"====================================================================",
        "-- Choose a Login Option --",
        "> Log in as Guest\t(guest)",
        "> Log in as User\t(login)",
        "> Register\t\t(register)",
        "> Exit\t\t\t(exit)",
		"====================================================================", NEWLINE);

		loginpage = loginpage + "Enter your username:"  + NEWLINE + "Enter your password:" + NEWLINE;
		loginpage = loginpage + "Welcome to the Library of Agility, admin" + NEWLINE;
		String line = "login" + NEWLINE + "admin" + NEWLINE + "admin" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);

		app = new App();
		app.login();

		assertEquals(loginpage, testOut.toString());
	}

	@Test
	public void testLoginUser()
	{
		String loginpage = String.join(NEWLINE,
		"====================================================================",
        "-- Choose a Login Option --",
        "> Log in as Guest\t(guest)",
        "> Log in as User\t(login)",
        "> Register\t\t(register)",
        "> Exit\t\t\t(exit)",
		"====================================================================", NEWLINE);
		loginpage = loginpage + "Enter your username:"  + NEWLINE + "Enter your password:" + NEWLINE;
		loginpage = loginpage + "Welcome to the Library of Agility, qqq" + NEWLINE;

		String line = "login" + NEWLINE + "qqq" + NEWLINE + "xxx" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);

		app = new App();
		app.login();

		assertEquals(loginpage, testOut.toString());
	}

	@Test
	public void testLoginRegister()
	{
		String loginpage = String.join(NEWLINE,
		"====================================================================",
        "-- Choose a Login Option --",
        "> Log in as Guest\t(guest)",
        "> Log in as User\t(login)",
        "> Register\t\t(register)",
        "> Exit\t\t\t(exit)",
		"====================================================================", NEWLINE);
		loginpage = loginpage + "Enter your ID:"  + NEWLINE + "Enter your username:" + NEWLINE + "Enter your password:" + NEWLINE +
								"Enter your firstname:"  + NEWLINE + "Enter your lastname:" + NEWLINE +
								"Enter your email:"  + NEWLINE + "Enter your phone number:" + NEWLINE;
		loginpage = loginpage + "Registration successful!" + NEWLINE + NEWLINE;
		loginpage = loginpage + String.join(NEWLINE,
		"====================================================================",
        "-- Choose a Login Option --",
        "> Log in as Guest\t(guest)",
        "> Log in as User\t(login)",
        "> Register\t\t(register)",
        "> Exit\t\t\t(exit)",
		"====================================================================", NEWLINE);
		loginpage = loginpage + "Welcome to the Library of Agility, guest" + NEWLINE + NEWLINE;

		String line = "register" + NEWLINE + "userID" + NEWLINE + "username" + NEWLINE + "password" +
					NEWLINE + "firstname" + NEWLINE + "lastname" + NEWLINE + "email" + NEWLINE + "0909" + NEWLINE + "guest" + NEWLINE;
		// String line = "register" + NEWLINE;
		// String line = "login" + NEWLINE + "qqq" + NEWLINE + "xxx" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);

		app = new App();
		app.login();

		assertEquals(loginpage, testOut.toString());
	}

	@Test
	public void testLoginInvalid()
	{
		String loginpage = String.join(NEWLINE,
		"====================================================================",
        "-- Choose a Login Option --",
        "> Log in as Guest\t(guest)",
        "> Log in as User\t(login)",
        "> Register\t\t(register)",
        "> Exit\t\t\t(exit)",
		"====================================================================", NEWLINE);
		loginpage = loginpage + "Command not recognised!" + NEWLINE;
		loginpage = loginpage + String.join(NEWLINE,
		"====================================================================",
        "-- Choose a Login Option --",
        "> Log in as Guest\t(guest)",
        "> Log in as User\t(login)",
        "> Register\t\t(register)",
        "> Exit\t\t\t(exit)",
		"====================================================================", NEWLINE);
		loginpage = loginpage + "Welcome to the Library of Agility, guest" + NEWLINE + NEWLINE;

		String line = "Johann Sebastian Bach" + NEWLINE + "guest" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);

		app = new App();
		app.login();

		assertEquals(loginpage, testOut.toString());
	}

	@Test
	public void testHomeLogout()
	{
		User user1 = new RegisteredUser("111", "qqq", "aaa", "aaa", "aaa", "0", 0);
		String line = "logout" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User"+NEWLINE,
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: aaa aaa"+NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			NEWLINE+"Farewell, wise Whisker...");

		app = new App();
		Parser parser = new Parser();
		app.user = user1;
		app.currentAppState = new RegisteredHome(parser);
		ScrollTable.insertScroll(new Scroll(0, date, "Death Note", user1, "00101", 0));
		app.scrollOfDayName = "Death Note";
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}

	@Test
	public void testHomeAddScroll()
	{
		User user1 = new RegisteredUser("111", "qqq", "aaa", "aaa", "aaa", "0", 0);
		String line = "addScroll" + NEWLINE + "1010" + NEWLINE + "AppTest" + NEWLINE + "scrollName" + NEWLINE + "Y" + NEWLINE + "logout" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE,
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: aaa aaa" + NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Enter your content:",
			"Enter your path to the directory where you want to store your scroll:",
			"Enter your scroll name:",
			"Please check your inputs again",
			"content: 1010",
			"path to the directory where you want to store your scroll: AppTest",
			"scroll name: scrollName",
			"Please confirm. (Y/N)",
			"scrollName added to ./uploads/AppTest".replaceAll("/", "\\" + File.separator),
			"",
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE,
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: aaa aaa" + NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			NEWLINE + "Farewell, wise Whisker...");

		app = new App();
		Parser parser = new Parser();
		app.user = user1;
		app.currentAppState = new RegisteredHome(parser);
		ScrollTable.insertScroll(new Scroll(0, date, "Death Note", user1, "00101", 0));
		app.scrollOfDayName = "Death Note";
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}

	@Test
	public void testHomeRemoveScroll()
	{
		User user1 = new RegisteredUser("111", "qqq", "aaa", "aaa", "aaa", "0", 0);
		String line = "addScroll" + NEWLINE + "1010" + NEWLINE + "AppTest" + NEWLINE + "scrollName" + NEWLINE + "Y" + NEWLINE + "logout" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);

		app = new App();
		Parser parser = new Parser();
		app.user = user1;
		app.currentAppState = new RegisteredHome(parser);
		app.home();
		testOut.reset();

		line = "removescroll" + NEWLINE + "1" + NEWLINE + "Y" + NEWLINE + "logout" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE,
			"~SCROLL OF THE DAY~",
			"Name: scrollName",
			"ID: 1",
			"Author: aaa aaa" + NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Enter your scroll ID:",
			"Please check your inputs again",
			"scroll ID: 1",
			"Please confirm. (Y/N)",
			"Scroll removed!",
			"",
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE + NEWLINE,
			"~SCROLL OF THE DAY~",
			"There are no scrolls to display ;(" + NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			NEWLINE + "Farewell, wise Whisker...");

		app = new App();
		parser = new Parser();
		app.user = user1;
		app.currentAppState = new RegisteredHome(parser);
		app.scrollOfDayName = "scrollName";
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}

	@Test
	public void testHomeViewScroll()
	{
		User user1 = new RegisteredUser("111", "qqq", "aaa", "aaa", "aaa", "0", 0);
		int scrollID = ScrollTable.scrollCount();
		Date date = new java.sql.Date(System.currentTimeMillis());
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("MMM dd yyyy");
        String expDate = sdf.format(cal.getTime());

		Guest guest = new Guest("guest", "guest", "Good", "Guest", "better@call.com", "5058425662", 0);

		Scroll testScroll1 = new Scroll(scrollID, date, "testScroll1", guest, "10101010", 0);
		ScrollTable.insertScroll(testScroll1);
		
		String line = String.join(NEWLINE, "viewscrolls", "logout");
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String viewer = String.format("%-5s%-25s%-15s%s%n", "ID", "Name", "Author", "Date");
		viewer += "1    testScroll1              Saul Goodman   " + expDate;
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE,
			"~SCROLL OF THE DAY~",
			"Name: testScroll1",
			"ID: 1",
			"Author: Saul Goodman" + NEWLINE,
			"-- Home --",
			"> View scrolls\t\t(viewScrolls)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			NEWLINE + viewer + NEWLINE,
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE,
			"~SCROLL OF THE DAY~",
			"Name: testScroll1",
			"ID: 1",
			"Author: Saul Goodman" + NEWLINE,
			"-- Home --",
			"> View scrolls\t\t(viewScrolls)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			NEWLINE + "Farewell, wise Whisker...");

		Parser parser = new Parser();
		app = new App();
		parser = new Parser();
		app.user = user1;
		app.currentAppState = new GuestHome(parser);
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}

	@Test
	public void testHomeEditDetails()
	{
		User user1 = new RegisteredUser("111", "qqq", "aaa", "aaa", "aaa", "0", 0);

		String line = String.join(NEWLINE, "editdetails", "username", "Waltuh", "logout");
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String userDetails = String.format("> Username: %-35s(username)", "qqq") + NEWLINE + 
							String.format("> UserID: %-37s(userid)", "111") + NEWLINE + 
							String.format("> First name: %-33s(firstname)", "aaa") + NEWLINE + 
							String.format("> Last name: %-34s(lastname)", "aaa") + NEWLINE + 
							String.format("> Email: %-38s(email)", "aaa") + NEWLINE + 
							String.format("> Phone number: %-31s(phoneNumber)", "0") + NEWLINE + 
							String.format("> Password: ********%27s(password)", "");
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE + NEWLINE,
			"~SCROLL OF THE DAY~",
			"There are no scrolls to display ;(" + NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			NEWLINE + userDetails,
			"Please select a field to edit.",
			"Enter your field to change:",
			"Enter your new username:",
			"Username changed to Waltuh." + NEWLINE,
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE + NEWLINE,
			"~SCROLL OF THE DAY~",
			"There are no scrolls to display ;(" + NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			NEWLINE + "Farewell, wise Whisker...");

		Parser parser = new Parser();
		app = new App();
		parser = new Parser();
		app.user = user1;
		app.currentAppState = new RegisteredHome(parser);
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}

	@Test
	public void testHomeEditScroll()
	{
		User user1 = new RegisteredUser("111", "qqq", "aaa", "aaa", "aaa", "0", 0);
		String line = "addScroll" + NEWLINE + "1010" + NEWLINE + "AppTest" + NEWLINE + "scrollName" + NEWLINE + "Y" + NEWLINE + "logout" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);

		app = new App();
		Parser parser = new Parser();
		app.user = user1;
		app.currentAppState = new RegisteredHome(parser);
		app.home();
		testOut.reset();

		line = String.join(NEWLINE, "editscroll", "1", "N", "logout");
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE,
			"~SCROLL OF THE DAY~",
			"Name: scrollName",
			"ID: 1",
			"Author: aaa aaa" + NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Enter your scroll ID:",
			"Please check your inputs again",
			"scroll ID: 1",
			"Please confirm. (Y/N)",
			"",
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE,
			"~SCROLL OF THE DAY~",
			"Name: scrollName",
			"ID: 1",
			"Author: aaa aaa" + NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			NEWLINE + "Farewell, wise Whisker...");

		parser = new Parser();
		app = new App();
		parser = new Parser();
		app.user = user1;
		app.currentAppState = new RegisteredHome(parser);
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}

	@Test
	public void testHomeDownloadScroll()
	{
		User user1 = new RegisteredUser("111", "qqq", "aaa", "aaa", "aaa", "0", 0);
		String line = "addScroll" + NEWLINE + "1010" + NEWLINE + "AppTest" + NEWLINE + "scrollName" + NEWLINE + "Y" + NEWLINE + "logout" + NEWLINE;
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);

		app = new App();
		Parser parser = new Parser();
		app.user = user1;
		app.currentAppState = new RegisteredHome(parser);
		app.home();
		testOut.reset();

		line = String.join(NEWLINE, "downloadscroll", "a", "logout");
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE,
			"~SCROLL OF THE DAY~",
			"Name: scrollName",
			"ID: 1",
			"Author: aaa aaa" + NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Enter your scroll name:",
			"This scroll does not exist!",
			"",
			"====================================================================",
			"Hello, aaa aaa",
			"You are a Registered User" + NEWLINE,
			"~SCROLL OF THE DAY~",
			"Name: scrollName",
			"ID: 1",
			"Author: aaa aaa" + NEWLINE,
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Remove scroll\t\t(removeScroll)",
			"> View scrolls\t\t(viewScrolls)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			NEWLINE + "Farewell, wise Whisker...");

		parser = new Parser();
		app = new App();
		parser = new Parser();
		app.user = user1;
		app.currentAppState = new RegisteredHome(parser);
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}

	@Test
	public void testHomeAddAccount()
	{
		Admin admin = new Admin("admin", "admin", "Joe", "Mama", "joe@mama.com", "0810202311", 0);
		String line = String.join(NEWLINE, "addAccount", "userID", "username", "password", "firstname", "lastname", "email", "0909", "logout");
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, Joe Mama",
			"You are an Admin",
			"",
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: Joe Mama",
			"",
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Add new user\t\t(addAccount)",
			"> Remove user\t\t(removeAccount)",
			"> View user profiles\t(viewProfiles)",
			"> View total uploads\t(viewUploads)",
			"> view downloads\t(viewDownloads)",
			"> View scrolls\t\t(viewScrolls)",
			"> Remove scroll\t\t(removeScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Enter your ID:",
			"Enter your username:",
			"Enter your password:",
			"Enter your firstname:",
			"Enter your lastname:",
			"Enter your email:",
			"Enter your phone number:",
			"Registration successful!",
			"", "",
			"====================================================================",
			"Hello, Joe Mama",
			"You are an Admin",
			"",
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: Joe Mama",
			"",
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Add new user\t\t(addAccount)",
			"> Remove user\t\t(removeAccount)",
			"> View user profiles\t(viewProfiles)",
			"> View total uploads\t(viewUploads)",
			"> view downloads\t(viewDownloads)",
			"> View scrolls\t\t(viewScrolls)",
			"> Remove scroll\t\t(removeScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Farewell, wise Whisker...");

		app = new App();
		Parser parser = new Parser();
		app.user = admin;
		app.currentAppState = new AdminHome(parser);
		ScrollTable.insertScroll(new Scroll(0, date, "Death Note", admin, "00101", 0));
		app.scrollOfDayName = "Death Note";
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}

	@Test
	public void testHomeRemoveAccount()
	{
		Admin admin = new Admin("admin", "admin", "Joe", "Mama", "joe@mama.com", "0810202311", 0);
		String line = String.join(NEWLINE, "removeAccount", "admin", "logout");
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, Joe Mama",
			"You are an Admin",
			"",
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: Joe Mama",
			"",
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Add new user\t\t(addAccount)",
			"> Remove user\t\t(removeAccount)",
			"> View user profiles\t(viewProfiles)",
			"> View total uploads\t(viewUploads)",
			"> view downloads\t(viewDownloads)",
			"> View scrolls\t\t(viewScrolls)",
			"> Remove scroll\t\t(removeScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Enter your username of the account that you want to remove:",
			"You cannot delete yourself!",
			"",
			"====================================================================",
			"Hello, Joe Mama",
			"You are an Admin",
			"",
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: Joe Mama",
			"",
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Add new user\t\t(addAccount)",
			"> Remove user\t\t(removeAccount)",
			"> View user profiles\t(viewProfiles)",
			"> View total uploads\t(viewUploads)",
			"> view downloads\t(viewDownloads)",
			"> View scrolls\t\t(viewScrolls)",
			"> Remove scroll\t\t(removeScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Farewell, wise Whisker...");

		app = new App();
		Parser parser = new Parser();
		app.user = admin;
		app.currentAppState = new AdminHome(parser);
		ScrollTable.insertScroll(new Scroll(0, date, "Death Note", admin, "00101", 0));
		app.scrollOfDayName = "Death Note";
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}


	@Test
	public void testHomeViewProfile()
	{
		Admin admin = new Admin("admin", "admin", "Joe", "Mama", "joe@mama.com", "0810202311", 0);
		String line = String.join(NEWLINE, "viewProfiles", "logout");
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, Joe Mama",
			"You are an Admin",
			"",
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: Joe Mama",
			"",
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Add new user\t\t(addAccount)",
			"> Remove user\t\t(removeAccount)",
			"> View user profiles\t(viewProfiles)",
			"> View total uploads\t(viewUploads)",
			"> view downloads\t(viewDownloads)",
			"> View scrolls\t\t(viewScrolls)",
			"> Remove scroll\t\t(removeScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Total users: 3",
			"UserID\t\t\tUsername\t\tFirstName\t\tLastName\t\temail\t\t\t\tphoneNumber\t\t\tUploadCount",
			"admin\t\t\tadmin\t\t\tJoe\t\t\tMama\t\t\tjoe@mama.com\t\t\t0810202311\t\t\t0",
			"guest\t\t\tguest\t\t\tSaul\t\t\tGoodman\t\t\tbetter@call.com\t\t\t5058425662\t\t\t0",
			"111\t\t\tqqq\t\t\taaa\t\t\taaa\t\t\taaa\t\t\t0\t\t\t0",
			"",
			"", "",
			"====================================================================",
			"Hello, Joe Mama",
			"You are an Admin",
			"",
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: Joe Mama",
			"",
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Add new user\t\t(addAccount)",
			"> Remove user\t\t(removeAccount)",
			"> View user profiles\t(viewProfiles)",
			"> View total uploads\t(viewUploads)",
			"> view downloads\t(viewDownloads)",
			"> View scrolls\t\t(viewScrolls)",
			"> Remove scroll\t\t(removeScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Farewell, wise Whisker...");

		app = new App();
		Parser parser = new Parser();
		app.user = admin;
		app.currentAppState = new AdminHome(parser);
		ScrollTable.insertScroll(new Scroll(0, date, "Death Note", admin, "00101", 0));
		app.scrollOfDayName = "Death Note";
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}


	@Test
	public void testHomeViewUploads()
	{
		Admin admin = new Admin("admin", "admin", "Joe", "Mama", "joe@mama.com", "0810202311", 0);
		String line = String.join(NEWLINE, "viewUploads", "logout");
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, Joe Mama",
			"You are an Admin",
			"",
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: Joe Mama",
			"",
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Add new user\t\t(addAccount)",
			"> Remove user\t\t(removeAccount)",
			"> View user profiles\t(viewProfiles)",
			"> View total uploads\t(viewUploads)",
			"> view downloads\t(viewDownloads)",
			"> View scrolls\t\t(viewScrolls)",
			"> Remove scroll\t\t(removeScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Username       Uploads",
			"admin          0",
			"guest          0",
			"qqq            0",
			"",
			"====================================================================",
			"Hello, Joe Mama",
			"You are an Admin",
			"",
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: Joe Mama",
			"",
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Add new user\t\t(addAccount)",
			"> Remove user\t\t(removeAccount)",
			"> View user profiles\t(viewProfiles)",
			"> View total uploads\t(viewUploads)",
			"> view downloads\t(viewDownloads)",
			"> View scrolls\t\t(viewScrolls)",
			"> Remove scroll\t\t(removeScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Farewell, wise Whisker...");

		app = new App();
		Parser parser = new Parser();
		app.user = admin;
		app.currentAppState = new AdminHome(parser);
		ScrollTable.insertScroll(new Scroll(0, date, "Death Note", admin, "00101", 0));
		app.scrollOfDayName = "Death Note";
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}

	@Test
	public void testHomeSearchScroll() {
		User user = new RegisteredUser("joe", "joe", "joe", "joe",
				"joe@joe.com", "00101010", 0);
		UserTable.insertUser(user, Hasher.createHash("joe"));
		String line = String.join(NEWLINE, "searchScroll", "scrollName", "CrazyScroll", "logout");
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		java.util.Date currentDate = new java.util.Date();
		String expected = String.join(NEWLINE,
				"=".repeat(68),
				"Hello, joe joe",
				"You are a Registered User",
				"",
				"~SCROLL OF THE DAY~",
				"Name: CrazyScroll",
				"ID: 1",
				"Author: joe joe",
				"",
				"-- Home --",
				"> Add scroll\t\t(addScroll)",
				"> Edit scroll\t\t(editScroll)",
				"> Remove scroll\t\t(removeScroll)",
				"> View scrolls\t\t(viewScrolls)",
				"> Download scrolls\t(downloadScroll)",
				"> Edit user details\t(editDetails)",
				"> Search scrolls\t(searchScroll)",
				"> Preview scrolls\t(preview)",
				"> Logout\t\t(logout)",
				"=".repeat(68),
				"",
				"=".repeat(68),
				"List of fields to search by:",
				"\t> uploaderID",
				"\t> scrollID",
				"\t> scrollName",
				"\t> uploadDate",
				"=".repeat(68),
				"Enter your field to search by:",
				"Enter your scrollName (Alphanumeric with no space):",
				"",
				String.format("%-5s%-25s%-15s%s", "ID", "Name", "Author", "Date"),
				String.format("%-5d%-25s%-15s%s", 1, "CrazyScroll", "joe joe", DatabaseUtils.convertDateToString(currentDate)),
				"",
				"=".repeat(68),
				"Hello, joe joe",
				"You are a Registered User",
				"",
				"~SCROLL OF THE DAY~",
				"Name: CrazyScroll",
				"ID: 1",
				"Author: joe joe",
				"",
				"-- Home --",
				"> Add scroll\t\t(addScroll)",
				"> Edit scroll\t\t(editScroll)",
				"> Remove scroll\t\t(removeScroll)",
				"> View scrolls\t\t(viewScrolls)",
				"> Download scrolls\t(downloadScroll)",
				"> Edit user details\t(editDetails)",
				"> Search scrolls\t(searchScroll)",
				"> Preview scrolls\t(preview)",
				"> Logout\t\t(logout)",
				"=".repeat(68),
				"",
				"Farewell, wise Whisker...");

		app = new App();
		Parser parser = new Parser();
		app.user = user;
		app.currentAppState = new RegisteredHome(parser);
		ScrollTable.insertScroll(new Scroll(5, currentDate,
				"CrazyScroll", user, "010101", 0));
		app.scrollOfDayName = "CrazyScroll";
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}

	@Test
	public void testHomeInvalid()
	{
		Admin admin = new Admin("admin", "admin", "Joe", "Mama", "joe@mama.com", "0810202311", 0);
		String line = String.join(NEWLINE, "IAmTheBest", "logout");
		testIn = new ByteArrayInputStream(line.getBytes());
		System.setIn(testIn);
		String expected = String.join(NEWLINE,
			"====================================================================",
			"Hello, Joe Mama",
			"You are an Admin",
			"",
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: Joe Mama",
			"",
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Add new user\t\t(addAccount)",
			"> Remove user\t\t(removeAccount)",
			"> View user profiles\t(viewProfiles)",
			"> View total uploads\t(viewUploads)",
			"> view downloads\t(viewDownloads)",
			"> View scrolls\t\t(viewScrolls)",
			"> Remove scroll\t\t(removeScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Command not recognised!",
			"",
			"====================================================================",
			"Hello, Joe Mama",
			"You are an Admin",
			"",
			"~SCROLL OF THE DAY~",
			"Name: Death Note",
			"ID: 1",
			"Author: Joe Mama",
			"",
			"-- Home --",
			"> Add scroll\t\t(addScroll)",
			"> Add new user\t\t(addAccount)",
			"> Remove user\t\t(removeAccount)",
			"> View user profiles\t(viewProfiles)",
			"> View total uploads\t(viewUploads)",
			"> view downloads\t(viewDownloads)",
			"> View scrolls\t\t(viewScrolls)",
			"> Remove scroll\t\t(removeScroll)",
			"> Edit scroll\t\t(editScroll)",
			"> Download scrolls\t(downloadScroll)",
			"> Edit user details\t(editDetails)",
			"> Search scrolls\t(searchScroll)",
			"> Preview scrolls\t(preview)",
			"> Logout\t\t(logout)",
			"====================================================================",
			"",
			"Farewell, wise Whisker...");

		app = new App();
		Parser parser = new Parser();
		app.user = admin;
		app.currentAppState = new AdminHome(parser);
		ScrollTable.insertScroll(new Scroll(0, date, "Death Note", admin, "00101", 0));
		app.scrollOfDayName = "Death Note";
		app.home();
		assertEquals(expected, testOut.toString().trim());
		assertTrue(app.currentAppState instanceof Start);
		assertNull(app.user);
	}


	@Test
	public void testDisplayUserAdmin()
	{
		app = new App();
		app.user = new Admin("admin", "admin", "Dylan", "Liu", "dylanliu@gmail.com", "0000000", 0);

		String expected = "====================================================================" +
						NEWLINE + "Hello, Dylan Liu" + NEWLINE + "You are an Admin";
		app.displayUser();
		assertEquals(expected, testOut.toString().trim());
	}

	@Test
	public void testDisplayUserGuest()
	{
		app = new App();
		app.user = new Guest("guest", "guest", "Dylan", "Liu", "dylanliu@gmail.com", "0000000", 0);

		String expected = "====================================================================" +
						NEWLINE + "Hello, Dylan Liu" + NEWLINE + "You are a Guest";
		app.displayUser();
		assertEquals(expected, testOut.toString().trim());
	}

	@Test
	public void testDisplayUserUser()
	{
		app = new App();
		app.user = new RegisteredUser("DylanL", "DylanL", "Dylan", "Liu", "dylanliu@gmail.com", "0000000", 0);

		String expected = "====================================================================" +
						NEWLINE + "Hello, Dylan Liu" + NEWLINE + "You are a Registered User";

		app.displayUser();
		assertEquals(expected, testOut.toString().trim());
	}






















	@Test
	public void displayRandomScrollTest() {
		User user1 = new RegisteredUser("111", "qqq", "aaa", "aaa", "aaa", "0", 0);
		String expected = String.join(NEWLINE,
			"~SCROLL OF THE DAY~",
						"Name: Death Note",
						"ID: 1",
						"Author: aaa aaa");

		app = new App();
		app.user = user1;
		ScrollTable.insertScroll(new Scroll(0, date, "Death Note", user1, "00101", 0));
		app.scrollOfDayName = "Death Note";
		app.displayRandomScroll();
		assertEquals(expected, testOut.toString().trim());
	}
}
